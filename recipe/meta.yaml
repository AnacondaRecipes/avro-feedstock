{% set name = "avro" %}
{% set version = "1.12.0" %}

package:
    name: {{ name }}
    version: {{ version }}

source:
    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/avro-{{ version }}.tar.gz
    sha256: cad9c53b23ceed699c7af6bddced42e2c572fd6b408c257a7d4fc4e8cf2e2d6b

build:
  skip: true  # [py<37]
  entry_points:
    - avro = avro.__main__:main
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
  number: 0

requirements:
  host:
    - python
    - setuptools >=40.8.0
    - wheel
    - pip
  run:
    - python
    - typing-extensions  # [py<38]

test:
  source_files:
    - avro/test
  imports:
    - avro
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - avro --help
    - pytest -vv avro/test  # [not win]
    # test_json_pretty has line ending issues on windows
    # test_write_csv has encoding issues
    - pytest -vv avro/test -k "not (test_json_pretty or test_write_csv)"  # [win]
  requires:
    - pip
    # Some tests are failing to collect with pytest >=8
    - pytest <8

about:
  home: https://avro.apache.org
  license: Apache-2.0
  license_file:
    - avro/LICENSE
    - avro/NOTICE
  license_family: Apache
  summary: Avro is a serialization and RPC framework.
  description: |
    Apache Avro is a data serialization system.
    Avro provides:
    * Rich data structures.
    * A compact, fast, binary data format.
    * A container file, to store persistent data.
    * Remote procedure call (RPC).
    * Simple integration with dynamic languages. Code generation is not required to read or write data files nor to use
      or implement RPC protocols. Code generation as an optional optimization, only worth implementing for statically
      typed languages.
  doc_url: https://avro.apache.org/docs/
  dev_url: https://github.com/apache/avro


extra:
  recipe-maintainers:
    - mariusvniekerk
